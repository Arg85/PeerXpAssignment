{"version":3,"sources":["Screen/HomeScree.js","Component/CardComponent.js","Component/PostCardComponent.js","Screen/DashboardScreen.jsx","Component/FilterPosts.js","Screen/PostsScreen.js","Component/FilterLinks.js","Screen/LinksScreen.js","App.js","reportWebVitals.js","index.js"],"names":["HomeScree","style","display","justifyContent","alignItems","border","boxShadow","to","OutlinedCard","Data","Name","Box","sx","minWidth","maxWidth","padding","Height","Card","variant","CardContent","Typography","fontSize","color","CardActions","Button","size","PostCardComponent","title","custom_excerpt","url","excerpt","className","href","target","rel","DashboardScreen","useState","numOfPosts","setNumOfPosts","numOfPages","setNumOfPages","authors","setAuthors","tags","setTags","latestPosts","setLatestPosts","fetchData","useCallback","Posts","axios","get","process","Pages","Authors","Tags","LatestPosts","all","then","spread","allData","NumOfPosts","data","posts","length","NumOfPages","pages","console","log","useEffect","Object","entries","map","a","id","FilterPosts","Heading","datas","setData","setTimeout","PostsScreen","allPosts","setAllPosts","filter","post","meta_description","FilterLinks","LinksScreen","brokenInternal","setBrokenInternal","brokenExternal","setBrokenExternal","BrokenInternal","BrokenExternal","InternalLinks","includes","ExternalLinks","forEach","fetch","res","status","push","Link","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4929bfeb.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nfunction HomeScree() {\r\n    return (\r\n        <div>\r\n            <h1> Home Screen</h1>\r\n    <div style={{display:\"flex\",justifyContent:\"space-around\",alignItems:\"center\",border:\"1px solid black\",boxShadow:\"2px 2px 2px 2px black\"}}>\r\n    <h2>  <Link to=\"/Dashboard\">Dashboard</Link>  </h2>\r\n           <h2>  <Link to=\"/Posts\">Posts</Link>  </h2>\r\n            <h2>  <Link to=\"/Links\">Links</Link> </h2>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScree\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function OutlinedCard({ Data, Name }) {\r\n  return (\r\n    <Box sx={{ minWidth: 150, maxWidth: 200, padding: 2, Height: 150 }}>\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\">\r\n            <h4>{Name} {Data}</h4>\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../Css/PostCardComponentLink.css\";\r\nfunction PostCardComponent({ title, custom_excerpt, url, excerpt }) {\r\n  return (\r\n    <div className=\"PostCardComponent\">\r\n      <a href={url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n        <h4>{title}</h4>\r\n        <p>{custom_excerpt ? custom_excerpt : excerpt}</p>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCardComponent;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport OutlinedCard from \"../Component/CardComponent\";\r\nimport \"../Css/DashboardCss.css\";\r\nimport axios from \"axios\";\r\nimport PostCardComponent from \"../Component/PostCardComponent\";\r\nfunction DashboardScreen() {\r\n  const [numOfPosts, setNumOfPosts] = useState(0);\r\n  const [numOfPages, setNumOfPages] = useState(0);\r\n  const [authors, setAuthors] = useState(0);\r\n  const [tags, setTags] = useState(0);\r\n  const [latestPosts, setLatestPosts] = useState({});\r\n\r\n  const fetchData = useCallback(() => {\r\n    const Posts = axios.get(\r\n      `https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    const Pages = axios.get(\r\n      `https://ghost-blog.ipxp.in/ghost/api/v3/content/pages/?key=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    const Authors = axios.get(\r\n      `https://ghost-blog.ipxp.in/ghost/api/v3/content/authors/?key=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    const Tags = axios.get(\r\n      `https://ghost-blog.ipxp.in/ghost/api/v3/content/tags/?key=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    const LatestPosts = axios.get(\r\n      `https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=${process.env.REACT_APP_API_KEY}&limit=5`\r\n    );\r\n    axios.all([Posts, Pages, Authors, Tags, LatestPosts]).then(\r\n      axios.spread((...allData) => {\r\n        const NumOfPosts = allData[0].data.posts.length;\r\n        const NumOfPages = allData[1].data.pages.length;\r\n        const Authors = allData[2].data.authors.length;\r\n        const Tags = allData[3].data.tags.length;\r\n        const LatestPosts = allData[4].data.posts;\r\n        console.log(\"anrauar\");\r\n        setNumOfPosts(NumOfPosts);\r\n        setNumOfPages(NumOfPages);\r\n        setAuthors(Authors);\r\n        setTags(Tags);\r\n        setLatestPosts(LatestPosts);\r\n      })\r\n    );\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(\"useEfeecet called\");\r\n    fetchData();\r\n  }, [fetchData]);\r\n  return (\r\n    <>\r\n      <h1>Dashboard Screen</h1>\r\n      <div className=\"dashboardCards\">\r\n        <OutlinedCard key={1} Name=\"Total Pages\" Data={numOfPages} />\r\n        <OutlinedCard key={2} Name=\"Total Posts\" Data={numOfPosts} />\r\n        <OutlinedCard key={3} Name=\"Total Authors\" Data={authors} />\r\n        <OutlinedCard key={4} Name=\"Total Tags\" Data={tags} />\r\n        <div>\r\n          <h2>Recent Posts</h2>\r\n       <div className=\"postGridDiv\">\r\n       {Object.entries(latestPosts).map((a) => {\r\n          console.log(a[1].url)\r\n          return (\r\n            <PostCardComponent\r\n              title={a[1].title}\r\n              key={a[1].id}\r\n              custom_excerpt={a[1].custom_excerpt}\r\n              url={a[1].url}\r\n              excerpt={a[1].excerpt}\r\n            />\r\n          );\r\n        })}\r\n       </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardScreen;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../Css/FilterPostCss.css\";\r\nfunction FilterPosts({ Heading, datas }) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"data\", typeof datas, Heading, datas);\r\n    setTimeout(() => {\r\n      setData(datas);\r\n    }, 100);\r\n  }, [setData, datas, Heading]);\r\n  return (\r\n    <div className=\"filterCards\">\r\n      {data.length > 0 ? (\r\n        <>\r\n          <h4>{Heading}</h4>\r\n          {data.map((a) => {\r\n            return (\r\n              <a href={a[1].url} rel=\"noreferrer\"target=\"_blank\">\r\n                <h5>{a[1].url}</h5>\r\n              </a>\r\n            );\r\n          })}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{Heading}</h4>\r\n          <h5>No posts found</h5>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterPosts;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../Css/PostsScreen.css\"\r\nimport PostCardComponent from \"../Component/PostCardComponent\";\r\nimport FilterPost from \"../Component/FilterPosts\";\r\nfunction PostsScreen() {\r\n  const [allPosts, setAllPosts] = useState(0);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const fetchData = async () => {\r\n    const Posts = await axios.get(\r\n      `https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n\r\n    setAllPosts(Posts.data.posts);\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"useEfeecet called\");\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <>\r\n    <h1>Posts</h1>\r\n    <div className=\"postFilterCards\">\r\n      {/* {console.log(allPosts)} */}\r\n      {/* {console.log(Object.entries(allPosts).map((a)=>{console.log(a[1].excerpt.length)}))} */}\r\n\r\n                  <FilterPost key={1} Heading=\"Without Meta Description\" datas={Object.entries(allPosts).filter(post=>post[1].meta_description===null)}/>\r\n                  <FilterPost key={2} Heading=\"Too long Meta Description\" datas={Object.entries(allPosts).filter(post=>post[1].meta_description!==null && post[1].meta_description.length>50 ) }/>\r\n                  <FilterPost key={3} Heading=\"Too long Url more than 100 words\" datas={Object.entries(allPosts).filter(post=>post[1].url.length>100)}/>\r\n                  <FilterPost key={4} Heading=\"Too long Posts more than 1500 words\" datas={Object.entries(allPosts).filter(post=>post[1].excerpt.length>1500)}/>\r\n                  <FilterPost key={5}  Heading=\"Too Short Posts ,less than 250 words\" datas={Object.entries(allPosts).filter(post=>post[1].excerpt.length<250)}/>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostsScreen;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../Css/FilterPostCss.css\";\r\nfunction FilterLinks({ Heading, datas }) {\r\n const [data, setData] = useState([])\r\n useEffect(()=>{\r\n  //  console.log(\"data\",typeof(datas),Heading,datas)\r\n setTimeout(()=>{\r\n  setData(datas)\r\n },100)\r\n },[setData,datas])\r\n  return (\r\n    \r\n    <div className=\"filterCards\">\r\n    \r\n      {Heading && Heading === \"Total Link Count\" ? (\r\n        <>\r\n          <h4>{Heading}</h4>\r\n          <p>{data}</p>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {Heading && Heading === \"Total Broken Internal Links\" && (\r\n        <>\r\n          <h4>{Heading}</h4>\r\n          {data.length>0?data.map((a)=>{\r\n  return <h5><a  rel=\"noreferrer\" target=\"_blank\" href={a} key={a}>{a}</a></h5>\r\n}):<>\"No Broken Internal Links\"{data.length}</>}\r\n        \r\n        </>\r\n      )}\r\n      {Heading && Heading === \"Total Broken External Links\" && (\r\n        <>\r\n          <h4>{Heading}</h4>\r\n          {data.length>0?data.map((a)=>{\r\n  return <h5><a rel=\"noreferrer\" target=\"_blank\" href={a} key={a}>{a}</a></h5>\r\n}):\"No Broken External Links\"}\r\n        \r\n        </>\r\n      )}\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default FilterLinks;\r\n","import React, {useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../Css/PostsScreen.css\"\r\nimport FilterLinks from \"../Component/FilterLinks\";\r\nfunction LinksScreen() {\r\n  const [allPosts, setAllPosts] = useState(0);\r\n  const [brokenInternal, setBrokenInternal] = useState([]);\r\n  const [brokenExternal, setBrokenExternal] = useState([]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const fetchData = async () => {\r\n    const Posts = await axios.get(\r\n      `https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n\r\n    setAllPosts(Posts.data.posts);\r\n    \r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEfeecet called\");\r\n    fetchData();\r\n    \r\n    \r\n  }, []);\r\n  useEffect(()=>{\r\n    console.log(\"ha\")\r\n    const BrokenInternal=[]\r\n    const BrokenExternal=[]\r\n    const InternalLinks = Object.entries(allPosts).filter((post) =>\r\n    post[1].url.includes(\"https://ghost-blog.ipxp.in/\")\r\n  );\r\n  const ExternalLinks=Object.entries(allPosts).filter(post=>!post[1].url.includes(\"https://ghost-blog.ipxp.in/\"))\r\n if(ExternalLinks.length>0){\r\n   ExternalLinks.forEach((a)=>{\r\n    fetch(allPosts).then((res) => {\r\n      if (res.status < 300) {\r\n        BrokenExternal.push(a[1].url);\r\n      }\r\n    });\r\n    setBrokenExternal(BrokenExternal)\r\n   })\r\n }\r\n  if(InternalLinks.length>0){\r\n\r\n    InternalLinks.forEach((Link) => {\r\n      fetch(Link).then((res) => {\r\n        if (res.status < 300) {\r\n          BrokenInternal.push(Link[1].url);\r\n        }\r\n      });\r\n      setBrokenInternal(BrokenInternal);\r\n     \r\n    });\r\n  }\r\n  \r\n  },[allPosts])\r\n  // var Links\r\n  return (\r\n    <>\r\n    <h1>Links</h1>\r\n    \r\n    <div className=\"postFilterCards\">\r\n\r\n                  <FilterLinks key={1} Heading=\"Total Link Count\" datas={allPosts.length}/>\r\n                  <FilterLinks key={21} Heading=\"Total Broken Internal Links\" datas={brokenInternal}/>\r\n                  <FilterLinks key={3} Heading=\"Total Broken External Links\" datas={brokenExternal}/>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinksScreen;\r\n","import \"./App.css\";\nimport { Link, BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport HomeScreem from \"./Screen/HomeScree\";\nimport DashboardScreen from \"./Screen/DashboardScreen\";\nimport PostsScreen from \"./Screen/PostsScreen\";\nimport LinksScreen from \"./Screen/LinksScreen\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomeScreem />\n        </Route>\n        <Route path=\"/Dashboard\">\n          <DashboardScreen />\n        </Route>\n        <Route path=\"/Posts\">\n          <PostsScreen/>\n        </Route>\n        <Route path=\"/Links\">\n          <LinksScreen/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}